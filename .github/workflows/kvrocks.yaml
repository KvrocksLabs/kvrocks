# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

name: kvrocks ci actions  # don't edit while the badge was depend on this

on: [push, pull_request]

# Cancel previous workflows if they are the same workflow on same ref (branch/tags)
# with the same event (push/pull_request) even they are in progress.
# This setting will help reduce the number of duplicated workflows.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  license:
    name: Check license header
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: apache/skywalking-eyes@main
        with:
          config: tools/ci/licenserc.yml


  lint:
    name: Lint and check code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code Base
        uses: actions/checkout@v3

      - name: Install Check Tools
        run: |
          sudo pip install --upgrade pip
          sudo pip install --upgrade setuptools
          sudo apt-get update
          sudo apt-get install -y cppcheck
          sudo pip install cpplint==1.5.0

      - name: Lint and check code
        run: |
          ./cpplint.sh
          ./cppcheck.sh


  build-and-test:
    name: Build and test
    needs: [license, lint]
    strategy:
      matrix:
        include:
          - name: Ubuntu GCC
            os: ubuntu-18.04
          - name: Ubuntu Clang
            os: ubuntu-18.04
            clang: -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++
          - name: Mac OS
            os: macos-latest

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Code Base
        uses: actions/checkout@v3
        with:
          fetch-depth: 64

      - name: Setup Mac OS
        if: ${{ startsWith(matrix.os, 'macos') }}
        run: brew install cmake gcc autoconf automake libtool

      - name: Get cpu core number
        if: ${{ startsWith(matrix.os, 'macos') }}
        run: echo "NPROC=$(sysctl -n hw.ncpu)" >> $GITHUB_ENV

      - name: Get cpu core number
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: echo "NPROC=$(nproc)" >> $GITHUB_ENV

      - name: Build Kvrocks
        run: |
          ./build.sh build -j$NPROC --unittest ${{ matrix.clang }}

      - name: Run Unit Test
        run: ./build/unittest

      - name: Install TCL
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: sudo apt install -y tcl8.5

      - name: Prepare Redis CLI
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: |
          wget https://github.com/redis/redis/archive/refs/tags/6.2.6.tar.gz
          tar -zxvf 6.2.6.tar.gz
          cd redis-6.2.6 && make -j$NPROC redis-cli && cd -
          cp redis-6.2.6/src/redis-cli tests/tcl/redis-cli

      - name: Run Redis Tcl Test
        run: |
          cd tests/tcl && ./runtest

      - name: Run Redis Tcl Test (Redis CLI)
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        run: |
          cd tests/tcl && ./runtest --single integration/redis-cli


  required:
    if: always()
    name: Required
    runs-on: ubuntu-latest
    needs:
      - build-and-test
    steps:
      - name: Merge requirement checking
        run: |
          build_and_test=${{ needs.build-and-test.result }}

          if [[ $build_and_test != 'success' ]]; then
            exit 1
          fi
